const Collection = require('./models/Collection.model')
const Nft = require('./models/Nft.model')
var mongoose = require('mongoose');
const axios = require('axios')
require("dotenv").config();

let apiKey = 'UyD7R-88N_cLlw1-y8eQ8_3cUnMjwrIB'
const baseURL = `https://eth-mainnet.alchemyapi.io/nft/v2/${apiKey}/getNFTsForCollection`;
const allNftsUrl = `${baseURL}?contractAddress=0x23581767a106ae21c074b2276d25e5c3e136a68b&withMetadata=true`;

mongoose
  .connect(process.env.MONGODB_URI)
  .then((x) => {
    console.log(`Connected to Mongo! Database name: "${x.connections[0].name}"`);
    Nft.create({
        nftName: 'ON1',
        tokenId: BigInt('0x0000000000000000000000000000000000000000000000000000000000000514').toString(),
        imageUrl: 'https://images.icytools.workers.dev/lg/collections/0x3bf2922f4520a8ba0c2efc3d2a1539678dad5e9d/tokens/1300',
        fromCollectionName: 'ON1 Force',
        fromCollection: '64012f63cae6924cbfd5fd62',
        collectionAddress: '0x3bf2922f4520a8ba0c2efc3d2a1539678dad5e9d',
    })
    .then((createdNft) => {
        Collection.findByIdAndUpdate('64012f63cae6924cbfd5fd62', {
            $push: {tokens: createdNft._id}
        }, {new: true})
        .then((updatedCollection) => {
            console.log("Updated COLLECTION:",updatedCollection.tokens.length);
        })
        .catch((err) => {
            console.log(err);
        })
    })
    .catch((err) => {
        console.log(err);
        console.log(selectedNft);
    })



  })
  .catch((err) => {
    console.error("Error connecting to mongo: ", err);
  });




//   0x00000000000000000000000000000000000000000000000000000000000004b5 1205
//   0x00000000000000000000000000000000000000000000000000000000000004bb 1211
//   0x00000000000000000000000000000000000000000000000000000000000004bf 1215
//   0x00000000000000000000000000000000000000000000000000000000000004c3 1219
//   0x00000000000000000000000000000000000000000000000000000000000004cc 1228
//   0x00000000000000000000000000000000000000000000000000000000000004cd 1229
//   0x00000000000000000000000000000000000000000000000000000000000004d2 1234
//   0x00000000000000000000000000000000000000000000000000000000000004e6 1254
//   0x00000000000000000000000000000000000000000000000000000000000004ea 1258
//   0x00000000000000000000000000000000000000000000000000000000000004eb 1259
//   0x00000000000000000000000000000000000000000000000000000000000004f1 1265
//   0x00000000000000000000000000000000000000000000000000000000000004f9 1273
//   0x00000000000000000000000000000000000000000000000000000000000004fb 1275
//   0x00000000000000000000000000000000000000000000000000000000000004ff 1279
//   0x000000000000000000000000000000000000000000000000000000000000050b 1291
//   0x0000000000000000000000000000000000000000000000000000000000000514 1300

//   0x000000000000000000000000000000000000000000000000000000000000016c
//   0x00000000000000000000000000000000000000000000000000000000000006d8
//   0x0000000000000000000000000000000000000000000000000000000000000763 1891
//   0x0000000000000000000000000000000000000000000000000000000000000bfd 3069
//   0x00000000000000000000000000000000000000000000000000000000000011b4 4532
//   0x0000000000000000000000000000000000000000000000000000000000001e23 7715
//   0x0000000000000000000000000000000000000000000000000000000000002621 9761